Nyan
hemni276 julma873


Nyan är ett imperativt språk. Språket ska inspireras av katter och ljuden 
de gör, exempel på koden kan se ut som följande:

mao ^While_print^:								//function
    prrr ^i < 0^:								//while-loop
     	meow ^"utskrift"^						//print
     	?nya? ^i < 0^:							//if-statement
			meow ^"youve been meowed"^			//print
		:3										//end
	:3											//end
:3												//end
				
Funktionaliteten ska likna python på vissa sätt, speciellt när man passerar 
variabler in i en funktion, då de kommer agera som referenser. En skillnad är att
vi planerar att ha statisk typning så att vi kan använda kattansikten för att 
deklarera typer. Hur dessa ansikten används beskrivs här: 

^w^ str
^3^ int
^.^ float
^oo^ bool

list=[]

Scope:

Vi väljer att använda ett dynamiskt scope. Med detta vill vi säga att variablers 
definitioner är baserade på vilket scope som funktionen ankallades i. 

BNF grammatik:

<assignment>::= <datatype> <variable> = <value>

<block>::= ":" <block> ":3" | <assignment> | <condition> | <while> | <blocks>

<blocks>::= <blocks> <block> | <block>

<function>::= "mao" <func_name> <params> <block>

<params>::= "^" <params> "^" | 
			<params> "," <datatype> <variable> |
			<datatype> <variable>

<variable>::= /[[:alpha:]\d_]+/

<value> ::= <int> | <str> | <float> | <bool>

<int>::= /\d+/

<str>::= /[\s\S]/

<float>::= /[\d]+\.[\d]+/

<bool>::= True | False

<func_name>::= /[:alpha:]+/

<condition>::= "?nya?" "^" <logic_statment> "^" <block> |
			   "nye?" "^" <logic_statment> "^" <block> | 
			   "nyan?" "^" <logic_statment> "^" <block>

<logic_statment>::= <logic_statment> < <logic_statment> |
					<logic_statment> > <logic_statment> |
					<logic_statment> == <logic_statment> |
					<logic_statment> != <logic_statment> |
					<logic_statment> <= <logic_statment> |
					<logic_statment> >= <logic_statment> |
					<logic_statment> && <logic_statment> |
					<logic_statment> || <logic_statment> |
					<logic_statment> not <logic_statment> |
					<logic_statment> and <logic_statment> |
					<logic_statment> or <logic_statment> |
					<true> | <false> | <value> | <variable>
				    
<airthmatic>::= <expr> <operator> <expr>

<expr>::= <term> + <term> | <term> - <term> | <term
<term>::= <factor> | <factor> * <factor> | <factor> / <factor> | <factor> % <factor>
<factor>::= number | identifier | (expr)

<while>::= "prrr" "^" <logic_statment> "^" <block>

<datatype>::= "^w^" |
		   	  "^3^" |
		      "^.^" |
		      "^oo^" |